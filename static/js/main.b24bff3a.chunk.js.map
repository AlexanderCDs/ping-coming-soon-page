{"version":3,"sources":["assets/svgs/logo.svg","assets/images/illustration-dashboard.png","components/Error.js","containers/ErrorClass.js","components/InputEmail.js","components/InputButton.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Error","props","errors","validate","name","type","className","message","setErrorClass","validated","InputEmail","placeholder","register","required","value","pattern","InputButton","handleClick","onClick","Form","children","onSubmit","handleSubmit","App","useForm","formState","alt","src","logo","width","height","data","window","open","illustration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24bff3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7e09371f.svg\";","export default __webpack_public_path__ + \"static/media/illustration-dashboard.f9aaf3db.png\";","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nconst Error = (props) => {\r\n    const { errors, validate, name } = props;\r\n    return (\r\n        errors?.[name] && errors?.[name].type === validate ? ( \r\n            <>\r\n                <i className=\"error-icon\" />\r\n                <span className=\"error\">{errors?.[name].message}</span>\r\n                </>\r\n        ) : (\r\n            null\r\n        )\r\n    )\r\n}\r\n  \r\nexport default Error;\r\n  ","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\n\r\nexport const setErrorClass = ({name, errors, validated = \"required\"}) => {\r\n    return errors?.[name] && errors?.[name].type ===  validated\r\n    ? 'error'\r\n    : '';\r\n}\r\n\r\nexport default setErrorClass;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/ \r\nimport Error from './Error';\r\nimport {setErrorClass} from '../containers/ErrorClass';\r\n\r\nconst InputEmail = (props) => {\r\n    const { placeholder, register, name, required, errors} = props;\r\n    return (\r\n        <div className=\"input-text\">  \r\n            <input \r\n            placeholder={placeholder} \r\n            className={\r\n                `input \r\n                ${setErrorClass({name, errors, validated: 'required'})} \r\n                ${setErrorClass({name, errors, validated: 'pattern'})}`\r\n            } \r\n            type=\"text\" \r\n            {...register(name, { \r\n                required: {\r\n                    value: required, \r\n                    message: `${placeholder} cannot be empty`\r\n                }, \r\n                pattern: {\r\n                    value: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i, \r\n                    message: `Looks like this is not an email`\r\n                }\r\n            })}/> \r\n            {required && (\r\n                <Error  \r\n                errors={errors}\r\n                validate=\"required\"\r\n                name={name} />\r\n            )}  \r\n            <Error  \r\n            errors={errors}\r\n            validate=\"pattern\"\r\n            name={name} />\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputEmail;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 12/septiembre/2021\r\n**/  \r\n\r\nconst InputButton = (props) => {\r\n    const { className, value, handleClick } = props \r\n    return (\r\n        <div className=\"button\">  \r\n            <input \r\n                className={`btn ${className}`} \r\n                onClick={handleClick}\r\n                type=\"submit\"\r\n                value={value}/> \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default InputButton;","/** \r\n * @author: alexandercds\r\n * @description: \r\n * @date: 10/septiembre/2021\r\n**/  \r\n\r\nconst Form = (props) => {\r\n    const { children, onSubmit, handleSubmit, register } = props\r\n    \r\n    return (\r\n        <div className=\"form\"> \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                { children }\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default Form;\r\n  ","/**\r\n * @author: alexandercds \r\n * @description: \r\n * @date 13/septiembre\r\n**/  \r\nimport './assets/sass/App.scss'; \r\nimport logo from './assets/svgs/logo.svg';\r\nimport illustration from './assets/images/illustration-dashboard.png';\r\nimport InputEmail from './components/InputEmail';\r\nimport InputButton from './components/InputButton';\r\nimport Form from './components/Form';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst App = (props) => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = (data) => {\r\n        window.open(\"https://alexandercd.herokuapp.com/home\")   \r\n    }\r\n    return (\r\n        <section className=\"container\">\r\n            <div className=\"content\">\r\n                <div className=\"logo\">\r\n                    <img \r\n                    alt=\"Logo Ping Single column\" \r\n                    src={logo} \r\n                    width=\"86\" \r\n                    height=\"26\"/>\r\n                </div>\r\n                <div className=\"header\"> \r\n                    <h2>We are launching <span>soon!</span></h2>\r\n                    <h3>Subcribe and get notified</h3>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                    register={register}\r\n                    handleSubmit={handleSubmit}\r\n                    onSubmit={onSubmit}>\r\n                        <InputEmail\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        errors={errors} \r\n                        required={true}\r\n                        register={register} /> \r\n                        <InputButton value=\"Notify Me\"/>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"illustration\"> \r\n                    <img \r\n                    alt=\"Illustration Ping Single column\" \r\n                    src={illustration} \r\n                    width=\"1000\" \r\n                    height=\"610\"/>\r\n                </div>\r\n                <div className=\"footer\"> \r\n                    <div className=\"socila-medial\">\r\n                        <span className=\"facebook\"></span>\r\n                        <span className=\"twitter\"></span>\r\n                        <span className=\"instagram\"></span>\r\n                    </div>\r\n                    <div className=\"copy-section\">\r\n                        <p className=\"copy\">\r\n                            Copyright Ping. All reserved.\r\n                        </p> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}